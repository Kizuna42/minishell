○評価基準: 括弧
(echo "grouped" && echo "commands")
・期待: grouped\ncommands
実行結果->
minishell$ (echo "grouped" && echo "commands")
minishell$
で期待される挙動が出力できていない

minishell$ cd .. | grep a  << abc
minishell: warning: here-document delimited by end-of-file (wanted `abc')
子プロセスのheredocがすぐ止まってしまっている

- pwd | cat << abc << def << ghi > file1 が正常に動くように

- pwd | cat << abc << def << ghi > file1 の途中でCTRL＋Dしたときの終了ステータスが正しく反映されているように

- 多段パイプ × 多段リダイレクト × （＋HEREDOCあり）

多段リダイレクト→できていそう（ただしHEREDOC除く）
多段リダイレクトで途中で権限ないファイル等にあたったときに止まるか？→できていそう（権限なし以降のを書き換えないし、作らない）

-多段HERDOCが動かない
grep a << abc << def <<ghi
ctrl+dを押すまたは、LIMITERが入るごとに次のループに行くべき （abcの途中でctrl+d  が来たら、defのループに入ってほしい

■builtin関数
・環境変数はsetenvを書く
・環境変数はminishell内部に連結リストとして持たないとexportで追加したりできない
・exportとenv関数の挙動は似ているが、以下が異なる
①export B=22222→export
ソートされて表示される

②export B=22222→env
ソートされずに追加物が一番下に表示される

③export B→env
（export対象を何も書かない）
Bがそもそも表示されない

④export B→export
B=''と表示される（ソートされたリストの中で）
exportで何もないケースexport B のときに、envにはなくても良いが、exportでは表示されるべき

fd leakをしてしまっていそうなので、PIPEで1024段以上（2000段パイプなど）を入れると壊れると思います！
valgrind --track-fds=yes ./minishell
ls | ls | ls
==401170== FILE DESCRIPTORS: 7 open (3 std) at exit.
==401170== Open file descriptor 4: /dev/pts/1
==401170==    at 0x49D8FEB: dup (syscall-template.S:120)
==401170==    by 0x40142B: init_minishell (in /home/kanahash/Desktop/minishell/minishell)
==401170==    by 0x4013A6: main (in /home/kanahash/Desktop/minishell/minishell)

環境変数展開はたしか３パターンある
・通常のコマンドライン上
・HEREDOCのLIMITERまたはFILENAMEの場合
・HEREDOCの中身（たしかこれは、””と許さない）←うろ覚えなので要確認です
展開されるケースがものによって異なるので注意です

できていそうだけど一応確認
cd 権限ないディレクトリの時に抜け出せなくなってしまう